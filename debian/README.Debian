Contents
========

	Apache2 Configuration under Debian GNU/Linux
		Files and Directories in /etc/apache2
		Tools

	Using mod_disk_cache

	SSL workaround for MSIE
	
	Documentation


Apache2 Configuration under Debian GNU/Linux
============================================

Debian's default Apache2 installation attempts to make adding and
removing modules, virtual hosts, and extra configuration directives as
flexible as possible, in order to make automating the changes and
administering the server as easy as possible.

Please be aware that this layout is quite different from the standard
Apache configuration. Due to the use of environment variables, apache2
needs to be started/stopped with /etc/init.d/apache2 or apache2ctl. 
Calling /usr/bin/apache2 directly will not work with the default
configuration.

Files and Directories in /etc/apache2:
-------------------------------------

apache2.conf

	This is the main configuration file.

envvars

	This contains environment variables that may be used in the
	configuration. Some settings, like user and pid file, need to
	go in here so that other scripts can use them. It can also
	be used to change some default settings used by apache2ctl.

conf.d/

	Files in this directory are included by this line in
	apache2.conf:

	# Include generic snippets of statements
	Include /etc/apache2/conf.d

	This is a good place to add additional configuration
	directives.

httpd.conf

	Empty file.

magic

	Empty file.

mods-available/

	This directory contains a series of .load and .conf files.
	The .load files contain the Apache configuration directive
	necessary to load the module in question.  The respective
	.conf files contain configuration directives necessary to
	utilize the module in question.

mods-enabled/

	To actually enable a module for Apache2, it is necessary to
	create a symlink in this directory to the .load (and .conf, if
	it exists) files associated with the module in
	mods-available/.  For example:

	cgi.load -> /etc/apache2/mods-available/cgi.load

ports.conf

	Configuration directives for which ports and IP addresses to
	listen to.

sites-available/

	Like mods-available/, except it contains configuration
	directives for different virtual hosts that might be used with
	apache2.  Note that the hostname doesn't have to correspond
	exactly with the filename.  'default' is the default host.

sites-enabled/

	Similar in functionality to mods-enabled/, sites-enabled
	contains symlinks to sites in sites-available/ that the
	admnistrator wishes to enable.

	Apache uses the first VirtualHost that matches the IP/Port
	as default for named virtual hosts. Therefore the 'default'
	site is linked to '000-default' so that it will be read first.

	Example:
	dedasys -> /etc/apache2/sites-available/dedasys

The Include directive ignores files with names that

- do not begin with a letter or number
- contain a character that is neither letter nor number nor _-.
- contain .dpkg

Other files
-----------

For historical reasons, the pid file is in /var/run/apache2.pid and not in
/var/run/apache2/apache2.pid.

Tools
-----

a2enmod and a2dismod are available for enabling and disabling modules utilizing
the above configuration system.

a2ensite and a2dissite do essentially the same thing as the above tools, but
for sites rather than modules.


Using mod_disk_cache
====================

To ensure that the disk cache does not grow indefinitely, htcacheclean is
started when mod_disk_cache is enabled. Both daemon and cron (daily) mode
are supported. The configuration (run mode, cache size, ...) is in
/etc/default/apache2 .

Normally, htcacheclean is automatically started and stopped by
/etc/init.d/apache2. However, if you change the state of mod_disk_cache or the
configuration of htcacheclean while apache2 is running, you may need to
manually start/stop htcacheclean with "/etc/init.d/apache2 start-htcacheclean"
or "/etc/init.d/apache2 stop-htcacheclean".


SSL workaround for MSIE
=======================

The SSL workaround for MS Internet Explorer needs to be added to your SSL
VirtualHost section (it was previously in ssl.conf but caused keepalive to be
disabled even for non-SSL connections):

SetEnvIf User-Agent ".*MSIE.*"  nokeepalive ssl-unclean-shutdown \
                                downgrade-1.0 force-response-1.0


Documentation
=============

The full apache 2 documentation can be found on the web at

http://httpd.apache.org/docs/2.2/

or, if you have installed the apache2-doc package, in

/usr/share/doc/apache2-doc/manual/

or at

http://localhost/manual/

There is also a wiki that contains useful information:

http://wiki.apache.org/httpd/
