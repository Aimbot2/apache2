#! /bin/bash
# postinst script
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#       * <postinst> `configure' <most-recently-configured-version>
#       * <old-postinst> `abort-upgrade' <new version>
#       * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#         <new-version>
#       * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#         <failed-install-package> <version> `removing'
#         <conflicting-package> <version>
#
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

#      n.b you can't rely on $2 (the last installed version)  for upgrades, as
#      the user might have been using apache2.2-common only. Let's pretend we're
#      upgrading if there is a /etc/apache2/.apache2_mpm_selected file around
we_are_upgrading_from_squeeze()
{
	if [ -n $2 ] && dpkg --compare-versions "$2" "le" "2.3" ; then
		return 0
	fi

	if [ -e /etc/apache2/.apache2_mpm_selected ] ; then
		return 0
	fi

	return 1
}

enable_default_mpm()
{
	mpm="mpm_event"
	if we_are_upgrading_from_squeeze $@ && [ -e /etc/apache2/.apache2_mpm_selected  ]; then
		tmpmpm=$(grep -v "^#" /etc/apache2/.apache2_mpm_selected | head -n1)
		case "$tmpmpm" in
			apache2-mpm-worker)
				mpm="mpm_worker"
			;;

			apache2-mpm-event)
				mpm="mpm_event"
			;;

			apache2-mpm-prefork)
				mpm="mpm_prefork"
			;;

			apache2-mpm-itk)
				# Houston, we got a problem
			;;

			*)
				# default MPM for upgrading in case we got an unrecognized
				# hint file
				mpm="mpm_event"
			;;
		esac
	fi
	a2enmod -q $mpm
}

enable_default_modules()
{
        for module in authz_host alias cgi dir ; do
                a2enmod -q $module
        done
}

install_default_site()
{

	if [ ! -L /etc/apache2/sites-enabled/000-default -a \
		! -f /etc/apache2/sites-enabled/000-default ]; then
			a2ensite -q default
	fi

	touch /var/log/apache2/error.log /var/log/apache2/access.log
	chown root:adm /var/log/apache2/error.log /var/log/apache2/access.log
	chmod 0640 /var/log/apache2/error.log /var/log/apache2/access.log
}

install_default_files()
{
	[ -f /etc/apache2/httpd.conf ] || touch /etc/apache2/httpd.conf

	if [ ! -e /var/www/index.html ] ; then
		cp /usr/share/apache2/default-site/index.html /var/www/index.html
        fi
}

# XXX: Find out whether I am on crack removing stale modules that way
refresh_modules()
{
	if we_are_upgrading_from_squeeze $@ && [ -d /etc/apache2/mods-enabled/ ] ; then
		shopt -s nullglob
		for link in /etc/apache2/mods-enabled/*.load ; do
			target=$(readlink "$link") || true
			if [ -z $target ] ; then
				continue
			fi
			case "$target" in
			*/disk_cache.load)
				a2dismod -q disk_cache
				a2enmod -q cache_disk
				# XXX: Handle rename of conf file
				continue
				;;
			esac

			module=$(basename "$link" | sed 's/\.load//') || true

			if [ ! -e "/etc/apache2/mods-enabled/$target" ] ; then
				echo "disable obsolete module $module"
				a2dismod -q $module
			fi
			# the module is already enabled, however
			# dependencies could have changed hence re-call
			# a2enmod again.
			# Example: the deflate module when upgraded from
			# Squeeze
			if [ -e "/etc/apache2/mods-enabled/$target" ] ; then
				a2enmod -q $module
			fi
		done
	fi
}

#XXX: Move /var/cache/apache2/mod_disk_cache to /var/cache/apache2/mod_cache_disk?


#DEBHELPER#

# remove dangling symlinks of disabled modules. This needs to be executed after
# DEBHELPER removing conffiles. dpkg will remove conffiles only if apache2 is
# installed. If only apache2.2-common was installed instead, the code turns into
# a no-op. Do we need to take care of that? If yes, we need to write oure own
# maintainer-scripts-helper

case "$1" in
        configure)

	refresh_modules $@

	enable_default_mpm $@

	install_default_files $@

        enable_default_modules $@

	if [ -z "$2" ]; then
		install_default_site
	fi

	# post installation cleanup
	if [ -e /etc/apache2/.apache2_mpm_selected ] ; then
		rm -f /etc/apache2/.apache2_mpm_selected
	fi

        ;;

        abort-upgrade|abort-remove|abort-deconfigure)

        ;;

        *)
                echo "postinst called with unknown argument \`$1'" >&2
                exit 1
        ;;
esac

exit 0
