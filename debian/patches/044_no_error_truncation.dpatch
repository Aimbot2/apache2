#! /bin/sh /usr/share/dpatch/dpatch-run
## no_error_truncation.dpatch
## http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/generators/mod_cgi.c?r1=541926&r2=541990
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Patch to stop errors being truncated when using mod_cgi. See
## DP: http://issues.apache.org/bugzilla/show_bug.cgi?id=39710
## DP: http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/generators/mod_cgi.c?r1=541926&r2=541990

@DPATCH@
diff -urNad apache2-work~/modules/generators/mod_cgi.c apache2-work/modules/generators/mod_cgi.c
--- apache2-work~/modules/generators/mod_cgi.c	2007-06-11 20:00:30.000000000 +0200
+++ apache2-work/modules/generators/mod_cgi.c	2007-06-11 20:04:38.000000000 +0200
@@ -924,14 +924,30 @@
         if ((ret = ap_scan_script_header_err_brigade(r, bb, sbuf))) {
             ret = log_script(r, conf, ret, dbuf, sbuf, bb, script_err);
 
-            /* Set our status. */
-            r->status = ret;
-
-            /* Pass EOS bucket down the filter chain. */
-            apr_brigade_cleanup(bb);
-            b = apr_bucket_eos_create(c->bucket_alloc);
-            APR_BRIGADE_INSERT_TAIL(bb, b);
-            ap_pass_brigade(r->output_filters, bb);
+            /*
+             * ret could be HTTP_NOT_MODIFIED in the case that the CGI script
+             * does not set an explicit status and ap_meets_conditions, which
+             * is called by ap_scan_script_header_err_brigade, detects that
+             * the conditions of the requests are met and the response is
+             * not modified.
+             * In this case set r->status and return OK in order to prevent
+             * running through the error processing stack as this would
+             * break with mod_cache, if the conditions had been set by
+             * mod_cache itself to validate a stale entity.
+             * BTW: We circumvent the error processing stack anyway if the
+             * CGI script set an explicit status code (whatever it is) and
+             * the only possible values for ret here are:
+             *
+             * HTTP_NOT_MODIFIED          (set by ap_meets_conditions)
+             * HTTP_PRECONDITION_FAILED   (set by ap_meets_conditions)
+             * HTTP_INTERNAL_SERVER_ERROR (if something went wrong during the
+             * processing of the response of the CGI script, e.g broken headers
+             * or a crashed CGI process).
+             */
+            if (ret == HTTP_NOT_MODIFIED) {
+                r->status = ret;
+                return OK;
+            }
 
             return ret;
         }
